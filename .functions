#!/usr/bin/env bash

# Dependencies:
#   brew install jq
#
# Description:
#   Makes assuming an AWS IAM role (+ exporting new temp keys) easier
aws-assume-role() {

  if [ -z "$1" ]
  then
    echo "  Syntax: aws-assume-role aws-account-number (role-name)"
    return 1
  fi

  AWS_ACCOUNT_NUMBER=$1
  ROLE_NAME=${2:-rio-developer-role}
  PROFILE=${3:-rioiam}

  unset  AWS_SESSION_TOKEN
  export AWS_ACCESS_KEY_ID='<user_access_key>'
  export AWS_SECRET_ACCESS_KEY='<user_secret_key>'
  export AWS_REGION=eu-west-1

  # if `aws sts get-caller-identity` returns ExpiredToken call aws-azure-login
  temp_role=$(aws sts assume-role \
              --role-arn "arn:aws:iam::$AWS_ACCOUNT_NUMBER:role/$ROLE_NAME" \
              --role-session-name "$(whoami)" \
              --profile $PROFILE)

  export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)
  export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)
  export AWS_SESSION_TOKEN=$(echo $temp_role | jq .Credentials.SessionToken | xargs)

  aws sts get-caller-identity
}
